name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  # This will trigger the workflow on pushes to all branches.

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -f app.dockerfile -t myapp:${{ github.sha }} .

      - name: Save Docker image to disk
        run: |
          docker save myapp:${{ github.sha }} | gzip > myapp.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp
          path: myapp.tar.gz

      # - name: Scan for vulnerabilities
      #   run: |
      #     docker run --rm \
      #       -v /var/run/docker.sock:/var/run/docker.sock \
      #       aquasec/trivy image --severity HIGH,CRITICAL myapp:${{ github.sha }}

      # - name: Push Docker image
      #   run: docker push myapp:${{ github.sha }}

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp
          path: .

      - name: Check files
        run: |
          ls -la -R

      - name: Load Docker image
        run: |
          gunzip -c myapp.tar.gz | docker load

      - name: Run Application Container
        run: |
          docker run -d --name app_container -p 8080:8080 myapp:${{ github.sha }}

      - name: Wait for Application to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000/; then
              echo "App is ready!"
              break
            fi
            echo "Waiting for app to be ready..."
            sleep 5
          done

      - name: Make a CURL request  
        run: |
          curl -X GET "http://localhost:8080"   

      - name: Clean Up
        run: |
          docker stop app_container
          docker rm app_container

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run performance tests
  #       uses: ./.github/actions/performance-test
  #       with:
  #         docker_image: myapp:${{ github.sha }}